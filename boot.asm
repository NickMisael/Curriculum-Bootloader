	jmp short Main
	nop

OEMname: 		   db "SUNGJIOS"
bytesperSector:    dw 512
sectPerCluster:    db 1
reservedSectors:   dw 1
numFAT:            db 2
numRootDirEntries: dw 224 
logicalSectors:    dw 2880
mediaType:         db 0xF0
numFATSectors:     dw 9
sectorsPerTrack:   dw 18
numHeads:          dw 2
hiddenSectors:     dd 0
numSectorsHuge:    dd 0
driveNum:          db 0
reserved:          db 0
extBootSign:       db 0x29
volumeID:          dd 0x12345678
volumeLabel:       db "SUNGJ1NOS  "
fileSystemType:    db "FAT12   "

nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop




Main:
	; store the driver number
	mov [drvnum], dl

	; Nao podemos atribuir 0 diretamente aos regs de segmento
	mov ax, 0x7c00
	mov ds, ax
	
	mov ax, 0x7c0
	mov es, ax

	sub ax, 0x200
	mov sp, ax
	mov bp, ax

	; Main
	;----------------------------------------------------

	; gerar modo de video - podemos trocar por qual quisermos
	; Res 320x200
	xor ax, ax
	mov al, 0x13
	int 0x10

	; Chamar fundo branco
	call DesenhaFundoBranco ; CamelCase

	; Escreve a frase
	call BotaFrase

	; Call Part2
	call ChamaParte2

	; Desenha
	;call Desenha


	; Acabou
	;cli
	;hlt
	jmp $

	;DesenhaFundoBranco
	;----------------------------------------------------
	DesenhaFundoBranco:
		; stack frame
		push bp
		mov  bp, sp
		pusha ; Empurra todos os registradores para pilha
		
		xor cx,cx    ; horizontal position -> 0
		mov dx, 0x1e ; vertical position   -> 30
		mov ah, 0x0c ; argumento da int
		mov al, 0x0f ; pixel color
		
		restart:
			int 0x10

			inc cx
			cmp cx, 0x140 ; if hor posi == 320
			je zeraHorizontal
			jmp restart

		
		fim:	
			popa
			mov sp, bp
			pop bp
			ret


	;----------------------------------------------------
	zeraHorizontal:
		xor cx, cx
		inc dx
		cmp dx, 0xc8 ; if ver posi == 200
		je fim
		jmp restart

	;----------------------------------------------------
	BotaFrase:
		; stack frame
		push bp
		mov  bp, sp
		pusha ; Empurra todos os registradores para pilha
		
		mov ah, 0x13 ; argumento da int
		mov al, 0x01 ; subservice
		xor bx, bx  ; bh = page number, bl = atttribute
		mov bl, 0x0f ; pixel color 
		mov cx, 0x0f ; len of string
		mov dh, 0x1c ; row position
		mov dl, 0x04 ; column position
		mov bp, mensagem
		;add bp, 0x7c00

		int 0x10

			
		popa
		mov sp, bp
		pop bp
		ret


	;----------------------------------------------------
	ChamaParte2:
		mov ah, 0x02
		mov al, 0x04 ; numero de setores para ler
		mov ch, 0    ; numero do cilindro
		mov cl, 2    ; starting sector number
		mov dh, 0    ; Head Number
		mov dl, [drvnum] ; Drive number
		mov bx, stage2 

		int 0x13
		jmp stage2

; Vars
;---------------------------------------------------------------------------------------
drvnum: db 0

mensagem: db 'Me contrata! =D'

;---------------------------------------------------------------------------------------
; Finalizando 
times (510 - ($ - $$)) db 0x00
dw 0xAA55

;---------------------------------------------------------------------------------------

stage2: 
	call Desenha

finall:
	jmp $

;---------------------------------------------------------------------------------------
Desenha:
	push bp
	mov bp, sp
	pusha

	; Prepara os registradores de segmento
	xor ax, ax
	mov ds, ax
	mov si, ax

	; COloca as local vars na stack
	push 0x0f ; color - [sp + 0x06]
	push 0x00 ; X pos hor - [sp + 0x04]
	push 0xc7 ; Y pos ver - [sp + 0x02]
	push 0x00 ; numero de repeticoes - [sp]

	mov di, sp ; na arch 16-BIT nao permite algumas operacoes com sp
	mov bl, byte [0x7c00 + dados + si] ; numero de repeticoes
	mov [di], bl

	start:
		mov dx, [di + 0x02] ; Y pos vert
			loop1:
				; Verifica se eh Branco
				;mov al, [di + 0x06]		; pega a cor na stack
				;cmp al, 0x0f 			; Verifica Se eh branco
				;je andaPixels

				; desenha pixel na tela
				xor bh, bh	     	; zera bh
				mov cx, [di + 0x04] ; X pos hor
				mov al, [di + 0x06] ; color
				mov ah, 0x0c        ; parametro da interrupcao
				int 0x10			; chama a interrupcao

				; Upload X position
				mov cx, [di + 0x04]
				inc cx 				 ; increment X position
				mov [di + 0x04], cx  ; upload stack with new value
				cmp cx, 0x13f 		 ; Verify if X pos is equal to 319
				je preparaRetorno 

				; Upload Num of Repts
				mov bl, [di]
				dec bl				 ; decrement Num of Repts
				mov [di], bl		 ; store on stack the new value
				cmp bl, 0x0			 ; Verify if Num of Rept is zero
				je trocaCor

				jmp loop1

				preparaRetorno:
					mov dx, [di + 0x02]
					dec dx				 ; decrementa Y
					mov [di + 0x02], dx  ; salva na stack

				    ; Verifica se acabou o Y
					cmp dx, 0
					je finall

					; Zera o X
					xor cx, cx
					mov [di + 0x04], cx

					; Pega  a nova cor
					inc si
					mov bl, [0x7c00 + dados + si]
					mov [di], bl
					call loop1


				trocaCor:
					mov al, [di + 0x06]
					cmp al, 0x00
					je branco
					xor ax, ax
					jmp salva

					branco:
						mov al, 0x0f

					salva:
						inc si
						mov bl, [0x7c00 + dados + si]
						mov [di], bl
						mov [di + 0x06], al
						jmp loop1

				;andaPixels:
				;	mov cx, [di + 0x04]           ; Pega o valor atual de X
				;	add cl, bl			          ; adiciona o numero de rept ao X
				;	mov [di + 0x04], cx           ; Salva o novo valor de X
				;	inc si		                  ; incrementa o data pointer 
				;	mov bl, [0x7c00 + dados + si] ; carrega o proximo item de dados
				;	mov [di], bl		          ; atualiza o numero de rept na stack

					; Verifica se chegou ao fim da linha
				;	cmp cx, 0x140
				;	je preparaRetorno

					; Atualiza a cor
				;	mov al, 0x00
				;	mov [di + 0x06], al
				;	jmp loop1

	popa
	mov sp, bp
	pop bp
	ret

;---------------------------------------------------------------------------------------

;dados: db 52,91,61,47,69,52,91,62,44,71,53,90,62,43,72,54,88,64,41,73
;       db 56,86,64,39,75,55,86,65,38,76,55,86,66,36,77,56,85,66,35,78
;       db 56,85,32,9,2,4,20,32,80,57,83,29,21,18,31,81,58,82,26,25,17,30,82
;       db 58,82,24,28,16,28,84,58,81,23,32,14,27,85,59,80,21,35,13,26,86,59,80,20
;       db 30,1,5,14,23,88,60,79,5,1,14,35,1,3,11,22,89,61,77,5,3,11,23,1,18,10,21,90
;       db 63,75,5,3,10,23,2,2,3,9,2,4,8,19,92,64,74,4,4,9,17,2,3,8,5,2,4,1,5,7,18,93
;       db 64,74,5,4,7,17,4,1,9,4,3,4,2,5,6,17,94,66,72,4,5,6,18,21,12,5,16,95,66,72,4,5
;       db 5,19,22,12,4,15,96,67,71,4,6,3,18,19,2,2,15,2,14,97,68,70,3,30,17,1,3,16,1,13
;       db 98,70,68,4,26,1,3,20,1,1,27,99,71,67,4,26,26,26,100,72,66,4,28,2,3,20,2,2,19
;       db 102,74,64,4,24,1,3,2,4,4,2,17,18,103,76,62,3,24,6,2,26,17,104,79,59,3,24,33,1,1
;       db 3,1,11,105,81,57,3,21,1,2,37,12,106,84,55,2,22,12,2,5,2,18,12,106,87,52,2,23,11
;       db 2,25,13,105,91,49,1,23,38,13,105,93,47,1,22,39,2,6,6,104,96,44,1,22,38,3,8,5,103
;       db 102,39,1,19,4,1,35,4,4,1,4,4,102,102,59,41,3,10,5,100,102,9,2,46,43,3,11,5,99
;       db 116,43,43,3,12,4,99,123,15,1,20,44,2,12,4,99,126,7,4,1,2,19,44,2,13,3,99,129,4,8
;       db 16,46,3,14,2,98,141,15,47,4,12,4,97,143,12,15,1,31,5,13,3,97,143,11,13,1,34,5,14
;       db 3,96,142,11,13,2,28,2,3,6,14,3,96,142,11,12,1,31,3,1,6,14,4,95,144,9,4,2,6,1,32,2
;       db 2,5,14,4,95,144,8,2,2,2,3,26,3,8,1,3,3,16,5,94,144,8,2,2,1,5,2,1,7,2,1,2,5,2,2,5,1,1
;       db 4,1,4,3,17,4,94,144,9,1,2,1,9,2,9,4,4,1,7,2,3,3,3,18,4,94,144,6,2,1,1,13,1,5,1,4,2,17
;       db 3,2,20,3,95,144,5,7,40,25,4,95,144,5,7,38,27,5,94,142,7,8,36,29,4,94,140,9,8
;       db 36,29,4,94,140,8,10,21,3,1,2,5,32,4,94,140,7,12,1,2,15,9,1,35,4,94,140,7,16,14,45
;       db 4,94,141,5,18,12,46,4,94,141,5,21,9,46,4,94,141,5,26,4,47,4,93,141,4,30,1,47
;       db 4,93,141,4,78,4,93,141,4,78,4,93,142,3,24,1,53,4,93,141,4,23,2,53,4,93,140
;       db 5,23,5,50,4,93,140,5,23,7,48,4,93,140,5,23,8,48,3,93,140,6,22,8,48,3,93,140,6
;       db 23,8,47,4,92,140,6,23,9,46,4,92,141,5,23,10,46,3,92,140,6,24,9,46,3,92,140,7
;       db 25,8,45,3,92,140,8,25,6,46,3,92,140,8,26,6,45,3,92,140,7,4,2,19,1,2,5,45,5,90
;       db 140,6,3,3,20,2,2,4,45,5,90,140,6,2,3,22,7,46,4,90,140,5,2,6,20,7,46,5,89,140,5,2
;       db 3,2,2,19,7,17,2,2,1,7,2,14,6,89,140,10,3,2,18,3,1,3,14,2,4,2,2,1,17,11,2,1,84,140,5
;       db 1,3,2,1,20,3,2,3,8,1,11,6,16,14,84,140,5,1,3,2,2,2,1,15,4,2,5,4,3,11,4,21,11,84,140
;       db 5,1,3,4,13,2,1,2,4,2,12,36,11,84,140,5,1,3,2,2,1,12,2,1,8,5,43,11,84,140,1,2,6,6,13
;       db 9,4,45,10,84,140,1,3,1,1,3,5,3,1,6,62,9,85,140,3,4,3,4,3,69,9,85,141,5,1,3,4,3
;       db 10,2,57,9,85,140,7,8,2,2,6,61,9,85,140,7,3,13,63,9,85,140,7,2,8,68,10,85,136
;       db 11,4,5,68,11,85,137,11,2,7,66,12,85,139,9,2,8,9,3,1,1,49,14,85,141,7,2,12,3,7,48
;       db 15,85,141,7,1,13,3,7,47,16,85,141,29,48,17,85,141,23,53,18,85,141,22,53,19,85
;       db 141,21,53,21,84,141,22,51,22,84,141,22,1,2,47,23,84,141,19,1,1,51,23,84,142
;       db 19,50,25,84,142,19,49,26,84,142,18,48,28,84,143,17,47,29,84,143,18,44,31,84
;       db 143,20,40,33,84,143,21,37,35,84,143,24,32,37,84,142,27,27,40,84,142,30,21,42,85
;       db 143,32,14,46,85,143,92,85,144,91,85,144,91,85,145,89,86,145,89,86
;       db 146,88,86,146,66,3,19,86,146,64,6,17,87,147,61,8,17,87,148,59,3,3,3,17,87
;       db 148,13,2,42,5,3,2,17,88,149,12,4,39,2,2,2,2,3,16,89,150,12,6,30,2,3,4,1,5,17,90
;       db 151,11,2,4,4,25,3,2,5,1,4,16,92,152,11,2,4,7,16,15,1,2,17,93,154,10,2,4,5,2,7,5,6,2,6
;       db 1,3,18,95,155,10,2,4,3,3,10,2,4,4,5,2,3,17,96,157,10,2,2,3,3,2,3,6,1,7,2,3,3,3,15,98
;       db 158,11,7,1,3,2,13,2,3,3,3,15,99,159,12,6,1,3,3,4,2,3,2,4,2,4,14,101,162,12,3,3,7,3,7,2,4
;       db 15,102,164,12,2,3,6,3,4,3,4,16,103,166,10,4,3,3,4,2,3,4,16,105,255


dados:  db 51,216,53,50,218,52,50,218,52,47,221,52,46,222,52,46,222,52,46,222,52,47,220,53,60,1,187,1,71,60,1,44,6,137,1,71,60,1,43,10,134,1,71,60,1,41,14,132,1,71,60,1,40,17,130,1,71,60,1
		db 39,19,78,13,38,1,71,60,1,39,20,76,15,37,1,71,60,1,39,21,75,16,36,1,71,60,1,39,21,74,17,36,1,71,60,1,40,23,71,18,35,1,71,60,1,41,23,70,18,35,1,71,60,1,42,23,70,18,34,1,71,60,1,44
		db 22,20,14,37,16,34,1,71,60,1,45,22,18,15,38,16,33,1,71,60,1,46,21,17,17,38,15,33,1,71,60,1,46,21,17,18,38,13,34,1,71,60,1,47,20,17,18,39,12,34,1,71,60,1,48,20,16,20,37,12,34,1,71
		db 60,1,49,19,17,19,36,12,35,1,71,60,1,49,19,19,18,35,12,35,1,71,60,1,50,18,21,17,33,13,35,1,71,60,1,51,17,23,15,33,13,35,1,71,60,1,51,17,25,14,31,13,36,1,71,60,1,52,17,24,15,30,13
		db 36,1,71,60,1,53,17,24,14,29,14,36,1,71,60,1,53,17,25,14,28,14,36,1,71,60,1,54,17,25,13,27,15,36,1,71,60,1,55,17,24,13,27,14,37,1,71,60,1,55,18,24,13,25,15,37,1,71,60,1,55,18,24,14
		db 22,17,37,1,71,60,1,55,13,2,4,23,14,21,18,37,1,71,60,1,55,12,4,1,1,2,23,14,18,20,37,1,71,60,1,54,13,4,2,1,2,22,15,15,21,38,1,71,60,1,54,13,4,3,1,2,21,15,13,23,38,1,71,60,1,54,13,4,7
		db 20,15,11,25,38,1,71,60,1,53,14,4,7,20,15,8,27,39,1,71,60,1,53,14,5,4,1,2,18,16,7,27,40,1,71,60,1,53,15,4,7,18,15,6,29,40,1,71,60,1,52,16,4,5,1,2,16,16,5,29,41,1,71,60,1,52,17,4,8,14
		db 16,4,30,42,1,71,60,1,51,18,4,5,1,3,12,17,3,15,1,14,43,1,71,60,1,51,19,4,4,1,3,11,18,2,30,44,1,71,60,1,51,19,4,4,1,3,11,18,1,31,44,1,71,60,1,50,21,3,4,2,3,10,49,45,1,71,60,1,50,22,3,3
		db 2,3,9,50,45,1,71,60,1,50,22,4,2,2,3,8,51,45,1,71,60,1,49,24,4,1,2,4,6,51,46,1,71,60,1,49,25,6,4,6,35,1,15,46,1,71,60,1,49,26,5,5,4,46,1,5,46,1,71,60,1,48,28,3,9,1,45,1,6,46,1,71,60,1
		db 48,30,1,62,46,1,71,60,1,48,93,46,1,71,60,1,47,94,46,1,71,60,1,47,86,1,7,46,1,71,60,1,47,94,46,1,71,60,1,46,95,46,1,71,60,1,46,95,46,1,71,60,1,46,94,47,1,71,60,1,46,94,47,1,71,60,1,46
		db 94,47,1,71,60,1,46,94,47,1,71,60,1,46,93,48,1,71,60,1,46,93,48,1,71,60,1,46,93,48,1,71,60,1,46,92,49,1,71,60,1,46,92,49,1,71,60,1,46,91,50,1,71,60,1,46,90,51,1,71,60,1,46,90,51,1,71,60
		db 1,46,89,52,1,71,60,1,46,88,53,1,71,60,1,46,88,53,1,71,60,1,46,87,54,1,71,60,1,45,87,55,1,71,60,1,45,86,56,1,71,60,1,45,86,56,1,71,60,1,45,85,57,1,71,60,1,45,84,58,1,71,60,1,45,83,59,1,71
		db 60,1,44,83,60,1,71,60,1,44,82,61,1,71,60,1,31,6,6,84,60,1,71,60,1,27,101,59,1,71,60,1,24,106,57,1,71,60,1,22,109,56,1,71,60,1,20,113,54,1,71,60,1,20,99,1,14,53,1,71,60,1,20,69,6,23,2,15,52
		db 1,71,60,1,19,67,14,15,6,16,50,1,71,60,1,19,65,25,2,10,17,49,1,71,60,1,19,63,39,18,48,1,71,60,1,19,61,42,19,46,1,71,60,1,19,59,44,19,46,1,71,60,1,19,59,45,19,45,1,71,60,1,19,56,49,21,42,1,71
		db 60,1,19,55,50,23,40,1,71,60,1,18,56,51,22,40,1,71,60,1,18,21,2,32,52,23,39,1,71,60,1,18,21,2,32,52,24,38,1,71,60,1,17,22,4,30,53,24,37,1,71,60,1,17,23,4,28,54,25,36,1,71,60,1,17,25,2,28,55,25
		db 35,1,71,60,1,16,56,55,25,35,1,71,60,1,16,56,56,25,34,1,71,60,1,16,55,57,26,33,1,71,60,1,16,9,6,40,58,26,32,1,71,60,1,16,9,7,39,58,27,31,1,71,60,1,16,9,9,37,59,24,1,2,30,1,71,60,1,16,9,2,3,5
		db 35,60,27,30,1,71,60,1,16,9,2,4,4,35,61,27,29,1,71,60,1,16,9,2,5,4,34,61,28,28,1,71,60,1,17,8,2,5,5,33,62,20,1,6,28,1,71,60,1,17,8,2,6,4,32,63,20,2,6,27,1,71,60,1,17,8,2,6,4,32,64,18,4,5,27,1
		db 71,60,1,17,8,2,6,5,31,65,16,5,3,1,2,26,1,71,60,1,18,7,3,6,4,31,65,16,6,5,26,1,71,60,1,18,8,2,6,4,30,67,14,8,4,26,1,71,60,1,19,7,3,6,4,29,68,12,9,5,25,1,71,60,1,19,8,2,6,4,29,68,11,10,5,25,1,71
		db 60,1,20,7,2,6,4,29,69,8,12,5,25,1,71,60,1,20,8,2,5,4,29,69,2,18,5,25,1,71,60,1,22,7,2,5,3,33,67,2,14,8,24,1,71,60,1,23,7,2,4,3,35,66,1,13,9,24,1,71,60,1,23,8,3,1,4,38,63,1,12,11,23,1,71,60,1
		db 23,9,6,40,63,1,10,12,23,1,71,60,1,23,11,3,43,61,2,6,15,23,1,71,60,1,22,59,61,23,22,1,71,60,1,22,61,59,23,22,1,71,60,1,22,62,59,22,22,1,71,60,1,22,64,58,21,22,1,71,60,1,22,37,2,26,58,21,21,1,71
		db 60,1,22,35,5,27,57,20,21,1,71,60,1,22,28,13,28,56,20,20,1,71,60,1,22,16,26,28,56,19,20,1,71,60,1,22,17,25,16,1,12,57,17,20,1,71,60,1,22,17,26,28,58,16,20,1,71,60,1,22,17,27,28,58,16,19,1,71,60
		db 1,22,17,27,29,58,15,19,1,71,60,1,22,18,26,27,1,2,58,14,19,1,71,60,1,22,18,27,20,2,8,59,13,18,1,71,60,1,22,18,27,20,3,8,59,12,18,1,71,60,1,22,19,27,18,5,8,60,10,18,1,71,60,1,22,19,28,17,6,8,60,10
		db 17,1,71,60,1,23,19,27,16,8,8,61,8,17,1,71,60,1,23,19,28,14,10,7,63,6,17,1,71,60,1,23,19,29,12,11,8,63,6,16,1,71,60,1,23,19,30,10,11,10,64,4,16,1,71,60,1,23,20,30,8,12,11,65,2,16,1,71,60,1,23,20,32
		db 3,14,13,82,1,71,60,1,24,19,33,2,13,15,81,1,71,60,1,24,19,34,1,12,16,81,1,71,60,1,24,20,34,1,10,18,80,1,71,60,1,24,2,1,17,34,2,7,21,79,1,71,60,1,25,1,4,14,35,3,3,23,79,1,71,60,1,25,1,7,8,1,2,37,28,78
		db 1,71,60,1,25,2,13,4,38,27,78,1,71,60,1,25,2,13,4,39,26,78,1,71,60,1,26,1,13,4,41,24,78,1,71,60,1,26,2,12,4,42,24,77,1,71,60,1,26,2,12,4,45,21,77,1,71,60,1,27,2,11,4,47,20,76,1,71,60,1,27,3,10,2,1,2
		db 48,18,76,1,71,60,1,27,6,8,4,49,18,75,1,71,60,1,28,17,52,15,75,1,71,60,1,28,17,55,13,74,1,71,60,1,29,16,59,9,74,1,71,60,1,29,15,65,4,74,1,71,60,1,30,14,143,1,71,60,1,30,14,143,1,71,60,1,30,14,143,1,71
		db 60,1,31,13,143,1,71,60,1,32,12,143,1,71,60,1,32,12,143,1,71,60,1,33,11,143,1,71,60,1,34,10,143,1,71,60,1,35,9,143,1,71,60,1,35,8,144,1,71,60,1,36,7,144,1,71,60,1,37,6,144,1,71,60,1,38,5,144,1,71,60,1
		db 38,5,144,1,71,60,1,39,4,144,1,71,60,1,39,3,145,1,71,60,1,40,2,145,1,71,60,1,41,1,145,1,71,60,1,187,1,71,60,1,187,1,71,60,189,71,60,195,65,56,200,64,55,201,64,55,201,64,255

;---------------------------------------------------------------------------------------


;times (510 - ($ - $$)) db 0x00
;dw 0xAA55